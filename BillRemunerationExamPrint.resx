<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAATU0AKgAAAAgAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCABlAEsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiuW8TTAato8Cy3
        EckkwbMDOxKggENGrqSPmB3YYDHIxmk3YmcuVXOpornHn+yaJdX7CSZo7qbO+4dVC+ey5JGcAD0HQUg1
        FJrq1ht7afDy+VP5k7qYnwSUAycsACT2xjBORVqEmromdWEHaR0lFVvsUPrN/wB/n/xqhpxS8udSidZF
        FrdeQpWZ/mHlo+Tz1y5/KpNDYorHubmztryG1KXLyyyJGoWZuSwc5+92EbE/SsqeQrfxIZtRAjuJyptV
        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
</value>
  </data>
</root>